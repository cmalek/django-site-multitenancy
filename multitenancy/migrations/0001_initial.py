# Generated by Django 2.1.8 on 2019-05-23 05:11

import django.contrib.sites.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import multitenancy.managers
import multitenancy.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
        ('sites', '0002_alter_domain_unique'),
    ]

    operations = [
        migrations.CreateModel(
            name='MultitenancyGroup',
            fields=[
                ('group_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='auth.Group')),
            ],
            options={
                'verbose_name': 'group',
                'verbose_name_plural': 'groups',
            },
            bases=('auth.group', models.Model),
            managers=[
                ('objects', django.db.models.manager.Manager()),
                ('site_objects', multitenancy.managers.SiteSpecificManager()),
            ],
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('site_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='sites.Site')),
                ('preferred_domain', models.CharField(blank=True, default='', help_text="What domain name do you prefer people use for this site? <br>If set, this value must match a previously saved Site Alias. If left blank, this Site's canonical domain will be used, instead.", max_length=100, validators=[multitenancy.validators.PreferredHostnameValidator()], verbose_name='Preferred Domain')),
            ],
            bases=('sites.site',),
            managers=[
                ('objects', django.contrib.sites.models.SiteManager()),
            ],
        ),
        migrations.CreateModel(
            name='SiteAlias',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain', models.CharField(error_messages={'unique': 'This domain name is already in use by another Site.'}, max_length=100, unique=True, validators=[django.core.validators.RegexValidator('^(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)+([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\-]*[A-Za-z0-9])$', 'Please enter a valid domain name, e.g. example.com.'), multitenancy.validators.HostnameValidator(), multitenancy.validators.AliasValidator()])),
            ],
            options={
                'verbose_name': 'site alias',
                'verbose_name_plural': 'site aliases',
            },
        ),
        migrations.AddField(
            model_name='site',
            name='permissions',
            field=models.ManyToManyField(blank=True, to='multitenancy.SiteAlias', verbose_name='aliases'),
        ),
        migrations.AddField(
            model_name='multitenancygroup',
            name='site',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='multitenancy.Site'),
        ),
    ]
